version: '3'

networks:
    laravel:
        driver: bridge

services:
    postgres:
        image: postgres
        restart: always
        environment:
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_DB=mydb
        ports:
        - "5436:5432"
        volumes:
        - ./postgres/data:/var/lib/postgresql/data
        networks:
            - laravel

    mongodb:
        image: mongo:latest
        restart: always
        environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=root
        ports:
        - "27017:27017"
        volumes:
        - ./mongodb/data:/data/db
        networks:
            - laravel

    nginx:
        image: nginx
        restart: always
        ports:
        - "8080:80"
        volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx/html:/usr/share/nginx/html
        networks:
            - laravel

    apache:
        image: httpd
        restart: always
        ports:
        - "85:80"
        volumes:
        - ./apache/html:/var/www/html
        networks:
            - laravel

    laravel:
        build:
            context: laravel
            dockerfile: Dockerfile
        restart: always
        environment:
            - COMPOSER_HOME=app/composer
            - COMPOSER_CACHE_DIR=app/composer/cache
        volumes:
            - ./laravel:/var/www
        depends_on:
            - postgres
        networks:
            - laravel

    vue:
        build:
            context: ./vue
        restart: always
        ports:
        - "5173:5173"
        volumes:
        - ./vue:/app
        - /app/node_modules
        networks:
        - laravel
        environment:
        - VITE_API_BASE_URL=http://laravel:8000/api
        - CHOKIDAR_USEPOLLING=true

    python:
        build:
            context: ./python
        restart: always
        ports:
        - "5000:5000"
        depends_on:
        - mongodb
        networks:
        - laravel
        environment:
        - MONGO_URI=mongodb://root:root@mongodb:27017/

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
        - ./prometheus/promdata:/prometheus/data
        - ./prometheus/promconfig:/etc/prometheus/
        command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/data'
        - '--web.enable-lifecycle'
        ports:
        - "9090:9090"
        depends_on:
        - cadvisor

    grafana:
        image: grafana/grafana
        container_name: grafana
        volumes:
        - ./grafana:/var/lib/grafana
        ports:
        - "3000:3000"
        environment:
        - GF_SECURITY_ADMIN_PASSWORD=your_password

    cadvisor:
        image: google/cadvisor
        container_name: cadvisor
        ports:
        - "9200:8080"
        volumes:
        - "/:/rootfs:ro"
        - "/var/run:/var/run:rw"
        - "/sys:/sys:ro"
        - "/var/lib/docker/:/var/lib/docker:ro"
        restart: unless-stopped

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
        container_name: elasticsearch
        environment:
        - xpack.security.enabled=false
        volumes:
        - ./elk/elasticsearch:/usr/share/elasticsearch/data
        ports:
        - "9201:9200"

    logstash:
        image: docker.elastic.co/logstash/logstash:8.6.2
        container_name: logstash
        volumes:
        - ./elk/logstash.conf:/etc/logstash/conf.d/logstash.conf
        ports:
        - "5000:5000"
        depends_on:
        - elasticsearch

    kibana:
        image: docker.elastic.co/kibana/kibana:8.6.2
        container_name: kibana
        environment:
        - ELASTICSEARCH_URL=http://elasticsearch:9200
        ports:
        - "5601:5601"
        depends_on:
        - elasticsearch

